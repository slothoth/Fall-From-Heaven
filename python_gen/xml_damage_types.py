full = {'FIRE':
            {'mod': """
('MODIFIER_FIRE_DAMAGE_MR_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),
('MODIFIER_FIRE_DAMAGE_RACIAL_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_FIRE_RESIST_RACIAL'),
('MODIFIER_FIRE_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),
('MODIFIER_FIRE_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),

-- ('MODIFIER_FIRE_DAMAGE_IS_WINTERBORN_CHECKER_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', ''),
('MODIFIER_FIRE_DAMAGE_IS_FROSTLING_CHECKER_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_FIRE_WEAK_FROSTLING'),
-- ('MODIFIER_FIRE_DAMAGE_VULNERABLE_TO_FIRE_CHECKER_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', ''),""",
             'mod_args': """
('MODIFIER_FIRE_DAMAGE_MR_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_FIRE_DAMAGE_RACIAL_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_FIRE_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_FIRE_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
-- ('MODIFIER_FIRE_DAMAGE_IS_WINTERBORN_CHECKER_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_FIRE_DAMAGE_IS_FROSTLING_CHECKER_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
-- ('MODIFIER_FIRE_DAMAGE_VULNERABLE_TO_FIRE_CHECKER_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),""",
             'ability_mod':  f"""
('£OTHER', 'MODIFIER_FIRE_DAMAGE_MR_CHECKER$'),
('£OTHER', 'MODIFIER_FIRE_DAMAGE_RACIAL_CHECKER$'),
('£OTHER', 'MODIFIER_FIRE_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_FIRE_DAMAGE_SPECIFIC_RESIST_CHECKER$'),
(-- '£OTHER', 'MODIFIER_FIRE_DAMAGE_IS_WINTERBORN_CHECKER_MORE$'),
('£OTHER', 'MODIFIER_FIRE_DAMAGE_IS_FROSTLING_CHECKER_MORE$'),
(-- '£OTHER', 'MODIFIER_FIRE_DAMAGE_VULNERABLE_TO_FIRE_CHECKER_MORE$'),"""

             },
        'COLD': {'mod': """('MODIFIER_COLD_DAMAGE_MR_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'FROST_IMMUNE_REQS'),
('MODIFIER_COLD_DAMAGE_RACIAL_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_FROST_RESIST_RACIAL'),
('MODIFIER_COLD_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'FROST_IMMUNE_REQS'),
('MODIFIER_COLD_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'FROST_IMMUNE_REQS'),

-- ('MODIFIER_COLD_DAMAGE_IS_ELF_CHECKER_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', ''),""",
                'mod_args': """('MODIFIER_COLD_DAMAGE_MR_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_COLD_DAMAGE_RACIAL_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_COLD_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_COLD_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
-- ('MODIFIER_COLD_DAMAGE_IS_ELF_CHECKER_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),""",
'ability_mod':  f"""
('£OTHER', 'MODIFIER_COLD_DAMAGE_MR_CHECKER$'),
('£OTHER', 'MODIFIER_COLD_DAMAGE_RACIAL_CHECKER$'),
('£OTHER', 'MODIFIER_COLD_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_COLD_DAMAGE_SPECIFIC_RESIST_CHECKER$'),
-- ('£OTHER', 'MODIFIER_COLD_DAMAGE_IS_ELF_CHECKER_MORE$')"""
                 },
        'LIGHTNING': {'mod': """('MODIFIER_LIGHTNING_DAMAGE_MR_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),
('MODIFIER_LIGHTNING_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),
('MODIFIER_LIGHTNING_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', NULL),
-- ('MODIFIER_LIGHTNING_DAMAGE_WEAPONS_BRONZE_IRON_CHECKER_MORE', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', ''),
""",
                'mod_args': """('MODIFIER_LIGHTNING_DAMAGE_MR_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_LIGHTNING_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_LIGHTNING_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
-- ('MODIFIER_LIGHTNING_DAMAGE_WEAPONS_BRONZE_IRON_CHECKER_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),""",
'ability_mod':  f"""
('£OTHER', 'MODIFIER_LIGHTNING_DAMAGE_MR_CHECKER$'),
('£OTHER', 'MODIFIER_LIGHTNING_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_LIGHTNING_DAMAGE_SPECIFIC_RESIST_CHECKER$'),
-- ('£OTHER', 'MODIFIER_LIGHTNING_DAMAGE_WEAPONS_BRONZE_IRON_CHECKER_MORE$'),"""
                 },
        'POISON': {
            'mod': """('MODIFIER_POISON_DAMAGE_MR_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'POISON_IMMUNE_REQS'),
('MODIFIER_POISON_DAMAGE_RACIAL_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_POISON_RESIST_RACIAL'),
('MODIFIER_POISON_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'POISON_IMMUNE_REQS'),
('MODIFIER_POISON_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'POISON_IMMUNE_REQS'),""",
            'mod_args': """('MODIFIER_POISON_DAMAGE_MR_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_POISON_DAMAGE_RACIAL_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_POISON_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_POISON_DAMAGE_SPECIFIC_RESIST_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),""",
            'ability_mod':  """
('£OTHER', 'MODIFIER_POISON_DAMAGE_MR_CHECKER$'),
('£OTHER', 'MODIFIER_POISON_DAMAGE_RACIAL_CHECKER$'),
('£OTHER', 'MODIFIER_POISON_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_POISON_DAMAGE_SPECIFIC_RESIST_CHECKER$'),"""
        },
        'UNHOLY': {
            'mod': """('MODIFIER_UNHOLY_DAMAGE_UNHOLY_TAINT_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNHOLY_IMMUNE_REQS'),
('MODIFIER_UNHOLY_DAMAGE_RACIAL_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_UNHOLY_RESIST_RACIAL'),
('MODIFIER_UNHOLY_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNHOLY_IMMUNE_REQS'),
('MODIFIER_UNHOLY_DAMAGE_SUNDERED_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNHOLY_IMMUNE_REQS'),""",
            'mod_args': """('MODIFIER_UNHOLY_DAMAGE_UNHOLY_TAINT_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_UNHOLY_DAMAGE_RACIAL_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_UNHOLY_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_UNHOLY_DAMAGE_SUNDERED_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),""",
            'ability_mod':  """
('£OTHER', 'MODIFIER_UNHOLY_DAMAGE_UNHOLY_TAINT_CHECKER$'),
('£OTHER', 'MODIFIER_UNHOLY_DAMAGE_RACIAL_CHECKER$'),
('£OTHER', 'MODIFIER_UNHOLY_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_UNHOLY_DAMAGE_SUNDERED_CHECKER$'),"""
        },
        'HOLY': {
            'mod': """('MODIFIER_HOLY_DAMAGE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'HOLY_IMMUNE_REQS'),
('MODIFIER_HOLY_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'HOLY_IMMUNE_REQS'),

('MODIFIER_HOLY_DAMAGE_IS_DEMON_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'OPPONENT_UNIT_IS_DEMON'),
-- ('MODIFIER_HOLY_DAMAGE_HAS_SHEUT_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', ''),
('MODIFIER_HOLY_DAMAGE_IS_UNDEAD_MORE$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'OPPONENT_UNIT_IS_UNDEAD'),""",
            'mod_args': """('MODIFIER_HOLY_DAMAGE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),
('MODIFIER_HOLY_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '3'),
('MODIFIER_HOLY_DAMAGE_IS_DEMON_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
-- ('MODIFIER_HOLY_DAMAGE_HAS_SHEUT_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_HOLY_DAMAGE_IS_UNDEAD_MORE$', 'Amount', 'ARGTYPE_IDENTITY', '2'),""",
            'ability_mod':  """
('£OTHER', 'MODIFIER_HOLY_DAMAGE$'),
('£OTHER', 'MODIFIER_HOLY_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_HOLY_DAMAGE_IS_DEMON_MORE$'),
-- ('£OTHER', 'MODIFIER_HOLY_DAMAGE_HAS_SHEUT_MORE$'),
('£OTHER', 'MODIFIER_HOLY_DAMAGE_IS_UNDEAD_MORE$'),"""
        },
        'DEATH': {
            'mod': """('MODIFIER_DEATH_DAMAGE_MR_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'DEATH_IMMUNE_REQS'),
('MODIFIER_DEATH_DAMAGE_RACIAL_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'UNIT_DEATH_RESIST_RACIAL'),
('MODIFIER_DEATH_DAMAGE_STONESKIN_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'DEATH_IMMUNE_REQS'),
('MODIFIER_DEATH_DAMAGE_SHEUT_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'DEATH_IMMUNE_REQS'),
('MODIFIER_DEATH_DAMAGE_MAGIC_IMMUNE_PROMO_CHECKER$', 'MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH', 'DEATH_IMMUNE_REQS')""",
            'mod_args': """('MODIFIER_DEATH_DAMAGE_MR_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_DEATH_DAMAGE_RACIAL_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_DEATH_DAMAGE_STONESKIN_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_DEATH_DAMAGE_SHEUT_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1'),
('MODIFIER_DEATH_DAMAGE_MAGIC_IMMUNE_PROMO_CHECKER$', 'Amount', 'ARGTYPE_IDENTITY', '1')""",
            'ability_mod':  """
('£OTHER', 'MODIFIER_DEATH_DAMAGE_MR_CHECKER$'),
('£OTHER', 'MODIFIER_DEATH_DAMAGE_RACIAL_CHECKER$'),
('£OTHER', 'MODIFIER_DEATH_DAMAGE_STONESKIN_CHECKER$'),
('£OTHER', 'MODIFIER_DEATH_DAMAGE_SHEUT_CHECKER$'),
('£OTHER', 'MODIFIER_DEATH_DAMAGE_MAGIC_IMMUNE_PROMO_CHECKER$'),"""
        }
        }

if True:
    with open("/Users/samuelmayo/Library/Application Support/Sid Meier's Civilization VI/Sid Meier's Civilization VI/Mods/builder/Core/ElementalDamage.sql", 'r') as file:
        lines = file.readlines()
    new_lines = []
    for line in lines:
        if "'Amount', 'ARGTYPE_IDENTITY'," in line:
            if line.split("'")[1][-2] != '_':
                mult = line.split("'")[1][-2:]
            else:
                mult = line.split("'")[1][-1]
            current = line.split("IDENTITY', '")[1][0]
            replacer = f"'{current}'"
            mult_replacer = f"'{int(current) * int(mult)}'"
            fmt = line.replace(replacer, mult_replacer)
            new_lines.append(fmt)

my_file = "/Users/samuelmayo/Library/Application Support/Sid Meier's Civilization VI/Sid Meier's Civilization VI/Mods/builder/data/XML/Units/CIV4UnitInfos.xml"

with open(my_file, "r") as file:
    lines = file.readlines()

print(lines)
holder = []
unit_class = ''
for idx, line in enumerate(lines):
    if 'DamageTypeCombat>' in line:
        next_line = lines[idx+1]
        next_line_2 = lines[idx+2]
        next_line_3 = lines[idx + 3]
        if 'iCombat' in next_line_2:
            fmt = next_line.replace('/', '').replace('<DamageType>', '').strip()
            original = next_line_2.replace('/', '').replace('<iCombat>', '').strip()
            fmt_unit_class = unit_class.replace('/', '').replace('<Type>', '').strip()
            holder.append([fmt_unit_class, fmt, original])

    if '<Type>' in line:
        unit_class = line

prettyprint = []
done_before = []

ability_header = 'INSERT INTO UnitAbilities(UnitAbilityType, Name, Description) VALUES\n'
tag_header = 'INSERT INTO Tags(Tag, Vocabulary) VALUES\n'
type_tags_header = 'INSERT INTO TypeTags(Type, Tag) VALUES\n'
type_header = 'INSERT INTO Types(Type, Kind) VALUES\n'

mod_header = 'INSERT INTO Modifiers(ModifierId, ModifierType, SubjectRequirementSetId) VALUES\n'
mod_args_header = 'INSERT INTO ModifierArguments(ModifierId, Name, Type, Value) VALUES\n'
ability_mod_header = 'INSERT INTO UnitAbilityModifiers(UnitAbilityType, ModifierId) VALUES\n'

for i in holder:
    unit = f'SLTH_{i[0]}'
    mult = i[2]
    dtype = i[1]
    d_short = dtype.replace('DAMAGE_', '') + f'_ELEMENT_{mult}'
    d_key = dtype.replace('DAMAGE_', '')

    type_tags = f"('{unit}', 'CLASS_{d_short}'),\n"
    type_tags_header += type_tags
    if d_short in done_before:
        continue
    unit_ability = f"('{d_short}', 'LOC_{d_short}_NAME', 'LOC_{d_short}_DESCRIPTION'),\n"
    tags = f"('CLASS_{d_short}', 'ABILITY_CLASS'),\n"
    types = f"('CLASS_{d_short}', 'KIND_ABILITY'),\n"

    ability_header += unit_ability
    tag_header += tags
    type_header += types


    mod_header += full[d_key]['mod'].replace('$', f'_{mult}')
    mod_args_header += full[d_key]['mod_args'].replace('$', f'_{mult}')
    ability_mod_header += full[d_key]['ability_mod'].replace('$', f'_{mult}').replace('£OTHER', d_short)
    done_before.append(d_short)

full_string = tag_header[:-1] + ';\n' + type_tags_header[:-1] + ';\n' + ability_header[:-1] + ';\n' + mod_header[:-1] + ';\n' + mod_args_header[:-1] + ';\n' + ability_mod_header[:-1] + ';\n' + type_header[:-1] + ';\n'
print('')
